# Dockerfile
# ==============================================================================
# 建築手順書 (再検証・確定版)
# Cloud Runの公式ドキュメントに基づき、最も標準的で確実な記述に修正。
# ==============================================================================

# ベースイメージとして、公式のPython 3.12安定版を使用。これは正しい選択です。
FROM python:3.12-slim

# 環境変数: Pythonがバッファなしでログを出力するように設定。
# これにより、ログがよりリアルタイムに表示されるようになります。
ENV PYTHONUNBUFFERED True

# コンテナ内の作業ディレクトリを設定します。
WORKDIR /app

# まず、依存関係ファイル(部品リスト)をコピーします。
COPY requirements.txt .

# 部品リストに基づいて、必要なライブラリをインストールします。
# --no-cache-dir は、コンテナのサイズを小さく保つためのベストプラクティスです。
RUN pip install --no-cache-dir -r requirements.txt

# アプリケーションの本体であるソースコードをコピーします。
COPY main.py .

# このサービスがリクエストを待ち受けるポートを8080に設定します。
# Cloud Runは、このPORT環境変数を自動的に認識します。
ENV PORT 8080

# ★★★【最重要・再検証】エントリポイント ★★★
# functions-frameworkではなく、より汎用的で確実なgunicornを起動コマンドとして採用します。
# これにより、フレームワーク固有の起動問題を完全に排除します。
# main:app は、「main.py」ファイルの中にある「app」という名前のFlaskアプリケーションを起動せよ、という意味です。
CMD exec gunicorn --bind :$PORT --workers 1 --threads 8 --timeout 0 main:app
